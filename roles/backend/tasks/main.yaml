  - name: install MySQL libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - PyMySQL
    - cryptography

  - name: disable current nodejs
    ansible.builtin.command: dnf module disable nodejs -y


  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: "{{ item }}" 
      state: installed
    loop:
    - nodejs
    - mysql

  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: Create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
      
  - name: unzip the backend code
    ansible.builtin.unarchive:
      src:  /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: Install npm dependencies
    community.general.npm:
      path: /app

  - name: Copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: mysql_root_password
      login_host: mysql.bsdaws82s.site
      target: /app/schema/backend.sql

  - name: daemon reload and restart services
    ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      daemon_reload: true
      name: backend

 



